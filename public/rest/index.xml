<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rests on Moses Okemwa</title>
    <link>https://mosesokemwa.github.io/public/rest/</link>
    <description>Recent content in Rests on Moses Okemwa</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 12 Oct 2019 12:21:11 +0300</lastBuildDate>
    
	<atom:link href="https://mosesokemwa.github.io/public/rest/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Flask migration of non-nullable fields</title>
      <link>https://mosesokemwa.github.io/public/rest/flask_alembic_migrations/</link>
      <pubDate>Sat, 12 Oct 2019 12:21:11 +0300</pubDate>
      
      <guid>https://mosesokemwa.github.io/public/rest/flask_alembic_migrations/</guid>
      <description>It is quite easy to add a non-nullable field to an empty table. Any migration tool, including Alembic, can automatically generate a migration file for you that is immediately ready for use, with no modifications required.
The problem arises when you have a table that is populated with data. You specify that you want a new field that doesn’t accept null values, yet, you already have a host of rows on the table created prior to this new addition.</description>
    </item>
    
    <item>
      <title>The expert beginner { good || bad }</title>
      <link>https://mosesokemwa.github.io/public/rest/dark-net-diaries/</link>
      <pubDate>Fri, 09 Aug 2019 21:40:14 +0300</pubDate>
      
      <guid>https://mosesokemwa.github.io/public/rest/dark-net-diaries/</guid>
      <description>This has been you at a specific point in your life. The Expert Beginner is one who has new skills to learn in their craft and improvements to make in their professional life, and is intentional about how they grow.
A high number of Expert Beginners are found in the Tech industry because it is receptive to career transitions and tech employees are asked to be dynamic. Some people in tech have a tech related certification from university, others can rightfully brag to be self-taught while others were in a completely different industry - like I was before I became a Software Engineer.</description>
    </item>
    
    <item>
      <title>Seting up NGINX</title>
      <link>https://mosesokemwa.github.io/public/rest/nginx-setup/</link>
      <pubDate>Sat, 25 May 2019 18:15:14 +0300</pubDate>
      
      <guid>https://mosesokemwa.github.io/public/rest/nginx-setup/</guid>
      <description>This is a process that I find myself doing over and over again, and for the most part I keep skipping a couple of steps or repeating them. Hopefully having it here will make my work easier the next time I need to set up NGINX.
Setup NGINX Setup UFW (Uncomplicated Firewall) rules
sudo ufw allow out 22/tcp sudo ufw allow out 80/tcp sudo ufw allow out 443/tcp Lets start by updating our software</description>
    </item>
    
    <item>
      <title>Disabling Ubuntu MOTD spam</title>
      <link>https://mosesokemwa.github.io/public/rest/disabling-ubuntu-motd-spam/</link>
      <pubDate>Mon, 25 Feb 2019 01:47:00 +0300</pubDate>
      
      <guid>https://mosesokemwa.github.io/public/rest/disabling-ubuntu-motd-spam/</guid>
      <description>When you log into an Ubuntu machine using SSH or a console, you’ll see a motd (“message of the day”) printed with some useful system information, as well as some useless marketing spam. The useless marketing spam is the same material you see when you visit motd.ubuntu.com. This is an affront to good taste, and should be disabled.
There are a few ways to disable the MOTD altogether. You can touch the file ~/.</description>
    </item>
    
    <item>
      <title>Kick off - The brain that Is</title>
      <link>https://mosesokemwa.github.io/public/rest/kick-off/</link>
      <pubDate>Thu, 24 Jan 2019 18:15:14 +0300</pubDate>
      
      <guid>https://mosesokemwa.github.io/public/rest/kick-off/</guid>
      <description>So I decided to start sharing my brain with the world, and by doing that I needed a place where I can put all my thoughts together. Most of them are unstructured others sound really composed.
To be effective and not worry about the PR/Marketing side of things I decided to do things different.
 I don’t use cookies to track visitors to my site; you are completely anonymous when vising this site except for whatever is revealed by your User-Agent and source IP information.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mosesokemwa.github.io/public/rest/settings-cookies-in-django/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mosesokemwa.github.io/public/rest/settings-cookies-in-django/</guid>
      <description>Using Django&amp;rsquo;s session framework should cover most scenarios, but Django also now provide direct cookie manipulation methods on the request and response objects (so you don&amp;rsquo;t need a helper function).
Setting a cookie:
def view(request): response = HttpResponse(&amp;lsquo;blah&amp;rsquo;) response.set_cookie(&amp;lsquo;cookie_name&amp;rsquo;, &amp;lsquo;cookie_value&amp;rsquo;) Retrieving a cookie:
def view(request): value = request.COOKIES.get(&amp;lsquo;cookie_name&amp;rsquo;) if value is None: # Cookie is not set
OR try: value = request.COOKIES[&amp;lsquo;cookie_name&amp;rsquo;] except KeyError:</description>
    </item>
    
  </channel>
</rss>