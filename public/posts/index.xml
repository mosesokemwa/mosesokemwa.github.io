<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Moses Okemwa</title>
    <link>https://mosesokemwa.github.io/public/posts/</link>
    <description>Recent content in Posts on Moses Okemwa</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 12 Oct 2019 12:21:11 +0300</lastBuildDate>
    
	<atom:link href="https://mosesokemwa.github.io/public/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Flask migration of non-nullable fields</title>
      <link>https://mosesokemwa.github.io/public/posts/flask_alembic_migrations/</link>
      <pubDate>Sat, 12 Oct 2019 12:21:11 +0300</pubDate>
      
      <guid>https://mosesokemwa.github.io/public/posts/flask_alembic_migrations/</guid>
      <description>It is quite easy to add a non-nullable field to an empty table. Any migration tool, including Alembic, can automatically generate a migration file for you that is immediately ready for use, with no modifications required.
The problem arises when you have a table that is populated with data. You specify that you want a new field that doesnâ€™t accept null values, yet, you already have a host of rows on the table created prior to this new addition.</description>
    </item>
    
  </channel>
</rss>